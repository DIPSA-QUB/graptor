#!/bin/bash

# For custom gcc build
. $HOME/tools/gcc-13-install/bin/load.sh

# Kelvin build
#module load compilers/gcc/10.3.0
#module load papi/7.0.1/gcc-10.3.0

TREE_ROOT=/var/shared/projects/asap/graphs/

TOOLSPATH=@CMAKE_BINARY_DIR@/tools
EXTERNALPATH=@CMAKE_BINARY_DIR@/external/Build
CILK_LIB=@graptor_ld_preload@

WEIGHTS=none

hostname

verbose=1

# args 1:prog_graph_layout 2:graph-file 3:graph-name 4:threads 5:commit 6:round 7:partitions
function run()
{
    local prog=$1
    local graph_path=$2
    local graph_name=$3
    local threads=$4
    local commit=$5
    local round=$6
    local part=$7
    local heur=$8
    local density=$9
    local early=${10}
    local lazy=${11}

    local dens=''
    if [ x$density = x ] ; then
	density=0.5
    else
	dens=.d`echo $density | tr . _`
    fi

    if [ x$early = x ] ; then
	early=0
    else
	dens="${dens}.ep${early}"
    fi

    if [ x$lazy = x ] ; then
	lazy=-1
    else
	dens="${dens}.lz${lazy}"
	if [ x$lazy = xall ] ; then
	    lazy=-2
	fi
    fi

    # persia node numbering due to SMT
    local numa=''
    if [ $threads -le 16 ] ; then
	numa="numactl --membind 0"
    elif [ $threads -le 32 ] ; then
	numa="numactl --membind 0,1"
    elif [ $threads -le 48 ] ; then
	numa="numactl --membind 0,1,2"
    fi

    bindir=bin_avx512_$commit
    arg=""

    local outdir=./graptor_avx512/$commit
    [ -d $outdir ] || mkdir -p $outdir
    local file=$outdir/output.${commit}.t${threads}.c${part}.r${round}.h${heur}${dens}.${prog}.${graph_name} 

    if [ ! -f $file ] ; then
	local papi_out=$file.papi
	echo $1 $2
	echo "PARLAY_NUM_THREADS=${threads} PAPI_EVENTS=PAPI_TOT_INS,PAPI_L2_DCM,PAPI_L3_TCM,PAPI_TLB_DM PAPI_OUTPUT_DIRECTORY=${papi_out} LD_PRELOAD=\"$TOOLSPATH/interposer.so\" timeout 1800s $numa ./${bindir}/${prog} -d ${density} -v ${verbose} -H ${heur} --lazy-threshold ${lazy} --induced-stats -p ${early} -c ${part} -s -i ${graph_path} > $file"
	bash -c "PARLAY_NUM_THREADS=${threads} PAPI_EVENTS=PAPI_TOT_INS,PAPI_L2_DCM,PAPI_L3_TCM,PAPI_TLB_DM PAPI_OUTPUT_DIRECTORY=\"${papi_out}\" LD_LIBRARY_PATH=\"$EXTERNALPATH/libconfig_project/lib:$LD_LIBRARY_PATH\" LD_PRELOAD=\"$TOOLSPATH/interposer.so\" timeout 1800s $numa ./${bindir}/${prog} -d ${density} -v ${verbose} -H ${heur} --lazy-threshold ${lazy} --induced-stats -p ${early} -c ${part} -s -i ${graph_path} > $file 2>&1"
    fi
}

# args 1:prog_graph_layout 2:graph-file 3:graph-name 4:threads 5:commit 6:round 7:partitions
function ins()
{
    local prog=$1
    local graph_path=$2
    local graph_name=$3
    local threads=$4
    local commit=$5
    local repetitions=$6
    local frac=$7

    bindir=bin_avx512_$commit
    arg=""

    local outdir=./graptor_avx512/$commit
    [ -d $outdir ] || mkdir -p $outdir
    local file=$outdir/output.${commit}.t${threads}.f${frac}.r${repetitions}.${prog}.${graph_name} 

    if [ ! -f $file ] ; then
	local papi_out=$file.papi
	echo $1 $2
	echo "PARLAY_NUM_THREADS=${threads} PAPI_EVENTS=PAPI_TOT_INS,PAPI_L2_DCM,PAPI_L3_TCM,PAPI_TLB_DM PAPI_OUTPUT_DIRECTORY=${papi_out} LD_PRELOAD=\"$TOOLSPATH/interposer.so\" ./${bindir}/${prog} -f $frac -r $repetitions -s -i ${graph_path} --min-size 16 --enable merge_vector_jump,hash_scalar,hash_vector > $file"
	bash -c "PARLAY_NUM_THREADS=${threads} PAPI_EVENTS=PAPI_TOT_INS,PAPI_L2_DCM,PAPI_L3_TCM,PAPI_TLB_DM PAPI_OUTPUT_DIRECTORY=\"${papi_out}\" LD_LIBRARY_PATH=\"$EXTERNALPATH/libconfig_project/lib:$LD_LIBRARY_PATH\" LD_PRELOAD=\"$TOOLSPATH/interposer.so\" ./${bindir}/${prog} -f $frac -r $repetitions -s -i ${graph_path} --min-size 16 --enable merge_vector_jump,hash_scalar,hash_vector > $file 2>&1"
    fi
}

# args: graph dir/undir
function for_gg()
{
    local graph_path=`@CMAKE_SOURCE_DIR@/tools/graptor_tree.sh -l $TREE_ROOT materialise graptor $1 $2 $WEIGHTS`

    echo "graph path: $graph_path"

    local g="${1}_${2}"
    local commit=$3

    local is_avx512f=0
    if cat /proc/cpuinfo | grep avx512 > /dev/null ; then is_avx512f=1 ; fi

    if false ; then
    for r in 20 ; do
	for op in 3 ; do # 2 1 0 4 ; do
	    for trim in itrim ; do # noitrim ; do # noitrim ; do
		for side in onesided ; do # twosided ; do # ; do
		    for above in nogeabove ; do # geabove ; do # ; do
			ins intersect_ds__op${op}_${trim}_${side}_${above}_vl16 $graph_path $g 128 $commit $r 0.75
			ins intersect_ds__op${op}_${trim}_${side}_${above}_hopscotch1_vl16 $graph_path $g 128 $commit $r 0.75
			ins intersect_ds__op${op}_${trim}_${side}_${above}_hopscotch2_vl16 $graph_path $g 128 $commit $r 0.75
			ins intersect_ds__op${op}_${trim}_${side}_${above}_pset_vl16 $graph_path $g 128 $commit $r 0.75
		    done
		done
	    done
	done
    done
fi

#    #for r in `seq 0 2` ; do
#    for r in 0 ; do
##	for t in `seq 0 1` ; do
##	    for s in `seq 0 3` ; do
##		run MC__itrim_sort${s}_trav${t}_vl16 $graph_path $g 128 $commit $r 1024 1
##	    done
##	done
#	#for s in `seq 4 6` ; do
#	for s in `seq 4 5` ; do
#	    #for t in `seq 0 5` 8 10 12 ; do
#	    for t in 3 10 12 ; do
#		#run MC__itrim_sort${s}_trav${t}_vl16 $graph_path $g 128 $commit $r 1024 1
#		#run MC__itrim_sort${s}_trav${t}_vl16 $graph_path $g 128 $commit $r 1024 2
#		run MC__itrim_sort${s}_trav${t}_nopivc_nopivd_vl16 $graph_path $g 128 $commit $r 1024 2
#	    done
#	done
#    done

    for r in `seq 0 9` ; do
    #for r in `seq 10 11` ; do
    #for r in 0 ; do
	#run MC__itrim_sort4_trav3_vl16 $graph_path $g 128 $commit $r 1024 2 0.1 128

	#run MC__itrim_sort4_trav3_geabove_vl16 $graph_path $g 128 $commit $r 1024 2 0.1 128 0
	#run MC__itrim_sort4_trav3_geabove_vl16 $graph_path $g 128 $commit $r 1024 2 0.1 128 -2

	# ablation early pruning
	#run MC__itrim_sort4_trav3_geabove_vl16 $graph_path $g 128 $commit $r 1024 2 0.1 0
	#run MC__itrim_sort4_trav3_geabove_vl16 $graph_path $g 128 $commit $r 1024 2 0.1 128
	run MC__itrim_sort4_trav3_geabove_vl16 $graph_path $g 32 $commit $r 1024 2 0.1 128
	run MC__itrim_sort4_trav3_geabove_vl16 $graph_path $g 16 $commit $r 1024 2 0.1 128
	run MC__itrim_sort4_trav3_geabove_vl16 $graph_path $g 8 $commit $r 1024 2 0.1 128
	#run MC__itrim_sort4_trav3_geabove_nolhf_vl16 $graph_path $g 128 $commit $r 1024 2 0.1 128

	#run MC__itrim_sort4_trav3_geabove_noadvins_vl16 $graph_path $g 128 $commit $r 1024 2 0.1 128
	#run MC__itrim_sort4_trav3_geabove_nolazy_vl16 $graph_path $g 128 $commit $r 1024 2 0.1 128
	##run MC__itrim_sort4_trav3_nolazy_nohopscotch_vl16 $graph_path $g 128 $commit $r 1024 2 0.1 128
	##run MC__itrim_sort2_trav3_vl16 $graph_path $g 128 $commit $r 1024 2 0.1 128

	#run MC__itrim_sort4_trav3_geabove_vl16 $graph_path $g 128 $commit $r 1024 2 0.5 128
	#run MC__itrim_sort4_trav3_geabove_vl16 $graph_path $g 128 $commit $r 1024 2 0.9 128
	#run MC__itrim_sort4_trav3_geabove_vl16 $graph_path $g 128 $commit $r 1024 2 0.7 128
	#run MC__itrim_sort4_trav3_geabove_vl16 $graph_path $g 128 $commit $r 1024 2 0.3 128
	#run MC__itrim_sort4_trav3_geabove_vl16 $graph_path $g 128 $commit $r 1024 2 1.0 128


	

	#run MC__itrim_sort4_trav3_hopscotch1_vl16 $graph_path $g 128 $commit $r 1024 2
	#run MC__itrim_sort4_trav3_hopscotch1_mcins1_vl16 $graph_path $g 128 $commit $r 1024 2
	#run MC__itrim_sort4_trav3_mcins1_vl16 $graph_path $g 128 $commit $r 1024 2
	#run MC__itrim_sort4_trav3_onesided_vl16 $graph_path $g 128 $commit $r 1024 2
#	run MC__itrim_sort4_trav3_vl16 $graph_path $g 128 $commit $r 1024 2
#	run MC__itrim_sort4_trav3_vl16_papi $graph_path $g 128 $commit $r 1024 2
	#run MC__itrim_sort4_trav3_vccc_vl16 $graph_path $g 128 $commit $r 1024 2
	#run MC__itrim_sort4_trav3_novc_vl16 $graph_path $g 128 $commit $r 1024 2
	#run MC__itrim_sort4_trav3_vcabs_vl16 $graph_path $g 128 $commit $r 1024 2
	#run MC__itrim_sort4_trav3_nopivc_nopivd_vl16 $graph_path $g 128 $commit $r 1024 2
    done

#    for r in `seq 0 2` ; do
#	for d in 0.9 0.7 0.95 1 ; do
#	    run MC__itrim_sort4_trav3_vl16 $graph_path $g 128 $commit $r 1024 2 $d
#	done
#    done

#    for r in `seq 0 2` ; do
#	for threads in 1 4 8 16 32 64 128 ; do
#	    run MC__itrim_sort4_trav3_vl16 $graph_path $g $threads $commit $r 1024 2
#	done
#    done

#    for r in `seq 0 2` ; do
#	run MC__itrim_sort4_trav3_vl16_noavx512 $graph_path $g 128 $commit $r 1024 2
#    done

    # Incumbent clique profiling
    #verbose=0
    #run MC__itrim_sort4_trav3_density_vl16 $graph_path $g 128 $commit 0 1024 0
#    run MC__itrim_sort4_trav3_incumbent1_vl16 $graph_path $g 1 $commit 0 1024 0
#    run MC__itrim_sort4_trav3_incumbent2_vl16 $graph_path $g 1 $commit 0 1024 0
#    run MC__itrim_sort4_trav3_incumbent2_vcabs_vl16 $graph_path $g 1 $commit 0 1024 0
}

true
